// Generated by CoffeeScript 1.6.1
(function() {
  var delay, puts,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $(function() {
    var hot_tags;
    $("pre").addClass("prettyprint");
    hot_tags = [];
    $("li#hot_tag").each(function() {
      return hot_tags.push($(this).text());
    });
    $(".pin-tag").each(function() {
      var tag;
      tag = $(this).text();
      if (__indexOf.call(hot_tags, tag) >= 0) {
        return $(this).parents(".pin-item").addClass("super_hot");
      }
    });
    $(".footnote").on("click", function() {
      var num;
      num = parseInt($(this).text());
      return $(".footnotes li").eq(num - 1).anim("random");
    });
    return $(".reversefootnote").on("click", function() {
      var footnote;
      footnote = $(this).attr("href").replace(/fnref/, 'fn');
      return $("a.footnote").each(function() {
        var source;
        source = $(this).attr("href");
        if (footnote === source) {
          return $(this).parent().parent().anim("random");
        }
      });
    });
  });

  puts = function(str) {
    return console.log(str);
  };

  delay = function(s, func) {
    return setTimeout(func, s * 1000);
  };

  $.fn.anim = function(anim) {
    var animations, blob, entrances, exits, fast, index, slow, speed;
    entrances = ["flipInX", "flipInY", "fadeIn", "fadeInUp", "fadeInDown", "fadeInLeft", "fadeInRight", "fadeInUpBig", "fadeInDownBig", "fadeInLeftBig", "fadeInRightBig", "bounceIn", "bounceInDown", "bounceInUp", "bounceInLeft", "bounceInRight", "lightSpeedIn", "rollIn"];
    exits = ["flipOutX", "flipOutY", "fadeOut", "fadeOutUp", "fadeOutDown", "fadeOutLeft", "fadeOutRight", "fadeOutUpBig", "fadeOutDownBig", "fadeOutLeftBig", "fadeOutRightBig", "bounceOut", "bounceOutDown", "bounceOutUp", "bounceOutLeft", "bounceOutRight", "lightSpeedOut", "rollOut", "hinge"];
    animations = ["flash", "bounce", "shake", "tada", "swing", "wobble", "wiggle", "pulse"];
    if (anim === "random") {
      index = Math.floor(Math.random() * animations.length);
      anim = animations[index];
    } else if (anim === "enter") {
      index = Math.floor(Math.random() * entrances.length);
      anim = entrances[index];
    } else if (anim === "exit") {
      index = Math.floor(Math.random() * exits.length);
      anim = exits[index];
    }
    puts("animating " + anim);
    blob = this;
    blob.addClass("animated " + anim);
    fast = ["fadeOutLeftBig", "fadeOutRightBig", "bounceOutRight", "bounceOutLeft", "bounceOutUp", "bounceOutDown"];
    slow = ["hinge", "bounceOut"];
    if (__indexOf.call(fast, anim) >= 0) {
      speed = 0.75;
      puts("" + anim + " is a fast one");
    } else if (__indexOf.call(slow, anim) >= 0) {
      speed = 2;
      puts("" + anim + " is a slow one");
    } else {
      speed = 1;
    }
    return delay(speed, function() {
      return blob.removeClass("animated " + anim);
    });
  };

}).call(this);
